#summary How to install and use fonehome
#labels Featured

== Introduction ==

*fonehome* is designed to work with a single server and several clients. The clients use SSH to connect to the server. Each client connection opens one or more reverse SSH tunnels back to itself over the original client to server connection. This allows any process local to the server to connect back to services on the client (such as the client's own SSH server) simply by connecting to a local port on the server.

The key advantage of this setup is that it works even if the client is behind a firewall that only allows outgoing TCP connections (such as a NAT device). In addition, the client's SSH server can be configured to only listen on the loopback interface, increasing its security. This also makes the server a single choke point for access to all of the clients, which makes controlling that access among multiple users easier.

The *fonehome* daemon is designed to be robust, automatically reconnecting to the server if the connection dies, or if it is unable to open the reverse forwarded ports on the server. SSH keep-alive packets are used to keep the connection alive and quickly detect failure at the other end.

== Installation ==

  # Install the *fonehome-server* RPM on the server. A new SSH public/private key pair will be automatically created. The private key will be stored in `/home/fonehome/.ssh/id_rsa`; this file will be securely copied to each client  (see below).
  # On each client machine, install the *fonehome* RPM, then:
    ## Edit `/etc/fonehome/fonehome.conf` to configure the server's hostname and which ports to reverse forward. Each client's reverse forwarded ports must be unique (or else they will conflict on the server side).
    ## Securely copy `/home/fonehome/.ssh/id_rsa` from the server to `/etc/fonehome/fonehome.key` on the client. Ensure only root can read it.
    ## Run `fonehome -I` to confirm and accept the server's public key.
    ## Enable the *fonehome* service: `chkconfig --add fonehome`
    ## Start the *fonehome* service: `/etc/init.d/fonehome start`
  # Run `fhshow` on the server to view active connections
  # Run `fhssh` and `fhscp` on the server to connect back to clients

== Ports File ==

On the server, the file `/etc/fonehome-ports.conf` contains a list of all client machines and which ports they are forwarding. You have to manually keep this list up to date. It's not required that you do so, but if you don't then the `fhshow(1)`, `fhssh(1)`, and `fhscp(1)` utilities will be useless.

A sample ports file:
{{{
#
# This file contains a mapping from reverse-forwarded TCP port to originating client machine.
# This file is used by the fhshow, fhssh, and fhscp utilities.
#
# Format:
#
#   PORT  MACHINE-NAME   [ DESCRIPTION OF WHAT PORT CONNECTS TO ON THE CLIENT ]
#
# Note: the first entry for a given machine should be the SSH server port (if any).
#

# frank is reverse forwarding these three ports
10010   frank     Frank's Hot Dog Stand: SSH Server
10011   frank     Frank's Hot Dog Stand: MySQL Server
10012   frank     Frank's Hot Dog Stand: Apache Server

# bob is reverse forwarding only the ssh ports
10000   bob       Bob's Restaurant: SSH Server

# grandma's house
10100   grandma   Grandma's House: SSH Server

# dolly's house
10200   dolly     Dolly's House: SSH Server
}}}

== Connecting Back ==

To connect back to a client, simply initiate a TCP connection to `localhost` and whatever port(s) you have forwarded. The most common connection type is SSH, but anything is possible (HTTP, MySQL, Nagios plugins, etc).

In the case of SSH, the included server-side utilities make life easier.
Assuming you have client `client1` reverse forwarding port `1234` back to its own SSH server (port `22`), and you've noted this in `/etc/fonehome-ports.conf`, then you can use the `fhssh(1)` and `fhscp(1)` utilities just like `ssh(1)` and `scp(1)` (respectively), except you can use the name `client1` (or whatever you put in `fonehome-ports.conf`) instead of the client's real hostname.

== Monitoring ==

On the server, the `fhshow(1)` will show all current *fonehome* connections and where they are coming from.

Sample output:

{{{
$ fhshow
Fonehome SSHD 13847 from 12.34.56.78:34567:
    Port 10010:  frank: Frank's Hot Dog Stand: SSH Server
    Port 10011:  frank: Frank's Hot Dog Stand: MySQL Server
    Port 10012:  frank: Frank's Hot Dog Stand: Apache Server
Fonehome SSHD 23472 from 23.45.67.89:12345:
    Port 10000:  bob: Bob's Restaurant: SSH Server
Fonehome SSHD 24998 from 34.56.78.90:23456:
    Port 10100:  grandma: Grandma's House: SSH Server
}}}
== Security ==

Keeping the server's private SSH key secret is obviously very important. But in any case, the SSH connections from the clients are not allowed to execute any commands on the server, so (in theory) the worst that can happen if the private key is disclosed is a denial of service attack.